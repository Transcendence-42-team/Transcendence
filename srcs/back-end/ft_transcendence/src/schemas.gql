# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Int!
  token: String!
  is_connecting: Boolean!
  tfa_code: String
  email: String!
  intra_login: String!
  nickname: String!
  avatar: String
}

type Chanel {
  id: Int!
  owner_id: Int!
  chanel_name: String!
  chanel_size: Float
  max_users: Float!
  logo: String
  private: Boolean!
  interlocutor_id: Float
  messages: [Message!]!
}

type Message {
  id: Int!
  content: String!
  sent_at: DateTime!
  sender_id: Int!
  sender: User!
  channel_id: Int
  channel: Chanel
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Contact {
  id: Int!
  user_id: Int!
  contact_id: Int!
  pending: Boolean!
  contact(user_id: Int!): User!
}

type UsersChanels {
  user_id: Int!
  chanel_id: Int!
  pending: Boolean!
  chanels: Chanel!
}

type Tobloc {
  id: Int!
  blocker_id: Int!
  blocked_id: Int!
}

type Query {
  findAllUsers: [User!]!
  findUserById(id: Int!): User!
  searchUsers(research: String!, user_id: Int!): [User!]!
  Channel_findOne(id: Int!): Chanel!
  chanels(user_id: Int!): [Chanel!]!
  getChannelByOwnersAndInterlocutor(userId1: Int!, userId2: Int!): Chanel!
  Message_findAll_msg: [Message!]!
  Message_findAll_msg_chan(channelId: Int!): [Message!]!
  Message_findOne_msg(id: Int!): Message!
  contactsRequest(user_id: Int!): [Contact!]!
  myContactRequest(user_id: Int!): [Contact!]!
  myContacts(user_id: Int!): [Contact!]!
  makeAuthentication(code: String!): User!
  checkTwoAuthenticationFactor(code: String!): User!
  chanelsRequest(user_id: Int!): [UsersChanels!]!
  myChanels(user_id: Int!, private_chan: Boolean!): [UsersChanels!]!
  tobloc(id: Int!): Tobloc!
}

type Mutation {
  sendTwoFactorCodeByEmail(email: String!, code: String!): Boolean!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  createChanel(createChanelInput: CreateChanelInput!): Chanel!
  Channel_update(updateChanelInput: UpdateChanelInput!): Chanel!
  removeChanel(id: Int!): Chanel!
  removeDirectMsg(userId1: Int!, userId2: Int!): Chanel!
  createMessage(createMsgInput: CreateMessageInput!): Message!
  updateMessage(updateMsgInput: UpdateMessageInput!): Message!
  deleteMessage: Message!
  createContact(createContact: CreateContactInput!): Contact!
  replyAddContact(reply: UpdateContact!): Contact!
  deleteContact(id: Int!): Contact!
  createUser(createAuthenticationInput: CreateAuthenticationInput!): User!
  addUser(addUserChanel: AddUserChanel!): UsersChanels!
  acceptRequest(key: UpdateChanelUserInput!): UsersChanels!
  deleteChanelUser(key: UpdateChanelUserInput!): UsersChanels!
  createToBloc(blockerId: Int!, blockedId: Int!): Tobloc!
  removeTobloc(id: Int!): Tobloc!
}

input UpdateUserInput {
  id: Int!
  token: String
  is_connecting: Boolean
  tfa_code: String
  email: String
  intra_login: String
  nickname: String
  avatar: String
}

input CreateChanelInput {
  private: Boolean!
  owner_id: Int!
  chanel_name: String!
  chanel_size: Int!
  privmsg: Boolean
  max_users: Int!
  logo: String
  interlocutor_id: Int
}

input UpdateChanelInput {
  private: Boolean
  owner_id: Int
  chanel_name: String
  chanel_size: Int
  privmsg: Boolean
  max_users: Int
  logo: String
  interlocutor_id: Int
  id: Int!
}

input CreateMessageInput {
  content: String!
  sent_at: DateTime
  sender_id: Int!
  channel_id: Int
}

input UpdateMessageInput {
  content: String
  sent_at: DateTime
  sender_id: Int
  channel_id: Int
  id: Int!
}

input CreateContactInput {
  user_id: Int!
  contact_id: Int!
  pending: Boolean
}

input UpdateContact {
  user_id: Int
  contact_id: Int
  pending: Boolean!
  id: Int!
}

input CreateAuthenticationInput {
  nickname: String!
  avatar: String
}

input AddUserChanel {
  user_id: Int!
  chanel_id: Int!
  pending: Boolean
}

input UpdateChanelUserInput {
  user_id: Int!
  chanel_id: Int!
  pending: Boolean
}

type Subscription {
  addmessage(channel_id: Int!): Message!
}